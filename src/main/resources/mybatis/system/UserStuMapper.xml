<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.uas.system.dao.UserStuDao">
	
	<select id="get" resultType="com.uas.system.domain.UserStuDO">
		select `user_stu_id`,`user_id`,`stu_id` from user_stu where user_stu_id = #{value}
	</select>

	<select id="list" resultType="com.uas.system.domain.UserStuDO">
		select `user_stu_id`,`user_id`,`stu_id` from user_stu
        <where>  
		  		  <if test="userStuId != null and userStuId != ''"> and user_stu_id = #{userStuId} </if>
		  		  <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
		  		  <if test="stuId != null and stuId != ''"> and stu_id = #{stuId} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by user_stu_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from user_stu
		 <where>  
		  		  <if test="userStuId != null and userStuId != ''"> and user_stu_id = #{userStuId} </if>
		  		  <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
		  		  <if test="stuId != null and stuId != ''"> and stu_id = #{stuId} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.uas.system.domain.UserStuDO" useGeneratedKeys="true" keyProperty="userStuId">
		insert into user_stu
		(
			`user_id`, 
			`stu_id`
		)
		values
		(
			#{userId}, 
			#{stuId}
		)
	</insert>
	 
	<update id="update" parameterType="com.uas.system.domain.UserStuDO">
		update user_stu 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="stuId != null">`stu_id` = #{stuId}</if>
		</set>
		where user_stu_id = #{userStuId}
	</update>
	
	<delete id="remove">
		delete from user_stu where user_stu_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from user_stu where user_stu_id in 
		<foreach item="userStuId" collection="array" open="(" separator="," close=")">
			#{userStuId}
		</foreach>
	</delete>

</mapper>